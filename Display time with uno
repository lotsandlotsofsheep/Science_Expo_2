int h = 0;

// Date and time functions using just software, based on millis() & timer
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// If using software SPI (the default case):
#define OLED_MOSI   9  //Data
#define OLED_CLK   10
#define OLED_DC    11
#define OLED_CS    12
#define OLED_RESET 13
Adafruit_SSD1306 display(OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);

#include <Arduino.h>
#include <Wire.h>         // this #include still required because the RTClib depends on it
#include "RTClib.h"

#if defined(ARDUINO_ARCH_SAMD)
// for Zero, output on USB Serial console, remove line below if using programming port to program the Zero!
   #define Serial SerialUSB
#endif

RTC_Millis rtc;

void setup () {
    rtc.begin(DateTime(F(__DATE__), F(__TIME__)));
    
    Serial.begin(9600);
    display.begin(SSD1306_SWITCHCAPVCC);
    display.display();
    delay(10);
    display.clearDisplay();
    display.display();
}

void loop () {
  DateTime now = rtc.now();
  
    if( now.hour() < 13) {
      h = now.hour();
    }
    
    else {
      h = now.hour() - 12;
    }
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0,0);
    
    
    
    display.print(now.year(), DEC);
    display.print('/');
    display.print(now.month(), DEC);
    display.print('/');
    display.print(now.day(), DEC);
    display.print(' ');
    display.println();
    display.println();
    display.println();
    
    display.setTextSize(2.5);
    display.print(' ');
    display.print(' ');
    if (h < 10) {
      display.print(' ');
    }
    display.print(h, DEC);
    display.print(':');
    if (now.minute() < 10) {
      display.print('0');
    }
    display.print(now.minute(), DEC);
    display.setTextSize(1);
    display.print(' ');
    if (now.second() < 10) {
      display.print('0');
    }
    display.print(now.second(), DEC);
    display.println();
    display.display();
    delay(100);
}
